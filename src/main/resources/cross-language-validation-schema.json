{
  "$schema": "https://json-schema.org/draft/2019-09/schema#",
  "$id": "http://de.swa.cross-language-validation.json#",
  "title" : "Cross Language Validation Schema",

  "type": "object",
  "properties": {
    "schema-version": { "type": "string" , "enum": ["0.4"]},
    "mandatoryRules": { "$ref": "#/definitions/typeRules" },
    "immutableRules": { "$ref": "#/definitions/typeRules" },
    "contentRules":   { "$ref": "#/definitions/typeRulesContent" },
    "updateRules":    { "$ref": "#/definitions/typeRulesUpdate" }
  },
  "required": ["schema-version", "mandatoryRules", "immutableRules", "contentRules", "updateRules"],
  "additionalProperties": false,

  "definitions": {
    "typeNamePattern": {
      "pattern": "^[\\p{L}_$][\\p{L}\\p{N}_$]*$"
    },
    "propertyNameWithoutAggregateFunctionPattern": {
      "$comment": "Property name according to spec. E.g. 'foo[0-3].bar.zoo[1/2].zoo'. Validity ob index numbers must be validated by implementation. Is a 'pattern description' enough?",
      "pattern": "^([\\p{L}_$][\\p{L}\\p{N}_$]*(([\\[](\\d+(,\\d+)*|\\d+/\\d+|\\d+-\\d+|\\*)[]])?\\.))*[\\p{L}_$][\\p{L}\\p{N}_$]*(([\\[](\\d+(,\\d+)*|\\d+/\\d+|\\d+-\\d+|\\*)[]])?)+$"
    },
    "propertyNameWithAggregateFunctionPattern": {
      "$comment": "Property name with terminal aggregate function",
      "pattern": "^([\\p{L}_$][\\p{L}\\p{N}_$]*(([\\[](\\d+(,\\d+)*|\\d+/\\d+|\\d+-\\d+|\\*)[]])?\\.))*[\\p{L}_$][\\p{L}\\p{N}_$]*(([\\[](\\d+(,\\d+)*|\\d+/\\d+|\\d+-\\d+|\\*)[]])?)+(#sum|#distinct)?$"
    },
    "typeRules": {
      "type": "object",
      "$comment": "jsonschemavalidator.net supports unicode character classes! Is this pattern restrictive enough?",
      "propertyNames": { "$ref": "#/definitions/typeNamePattern" },
      "additionalProperties": { "$ref": "#/definitions/propertyRules" }
    },
    "typeRulesContent": {
      "type": "object",
      "propertyNames": { "$ref": "#/definitions/typeNamePattern" },
      "additionalProperties": { "$ref": "#/definitions/propertyRulesContent" }
    },
    "typeRulesUpdate": {
      "type": "object",
      "propertyNames": { "$ref": "#/definitions/typeNamePattern" },
      "additionalProperties": { "$ref": "#/definitions/propertyRulesUpdate" }
    },
    "propertyRules": {
      "type": "object",
      "propertyNames": { "$ref": "#/definitions/propertyNameWithoutAggregateFunctionPattern" },
      "additionalProperties": {
        "type": "array",
        "items": { "$ref": "#/definitions/conditions" }
      }
    },
    "propertyRulesContent": {
      "type": "object",
      "propertyNames": { "$ref": "#/definitions/propertyNameWithAggregateFunctionPattern" },
      "additionalProperties": {
        "type": "array",
        "items": { "$ref": "#/definitions/conditionsContent" },
        "minItems": 1
      }
    },
    "propertyRulesUpdate": {
      "type": "object",
      "propertyNames": { "$ref": "#/definitions/propertyNameWithAggregateFunctionPattern" },
      "additionalProperties": {
        "type": "array",
        "items": { "$ref": "#/definitions/conditionsUpdate" },
        "minItems": 1
      }
    },
    "conditions": {
      "type": "object",
      "properties": {
        "permissions":        { "$ref": "#/definitions/permissions" },
        "conditionsTopGroup": { "$ref": "#/definitions/conditionsTopGroup" },
        "conditionsGroup":    { "$ref": "#/definitions/conditionsGroup" },
        "condition":          { "$ref": "#/definitions/condition" }
      },
      "additionalProperties": false,
      "anyOf": [
        { "required": [ "permissions" ] },
        {
          "oneOf": [
            {"required": [ "conditionsTopGroup" ] },
            {"required": [ "conditionsGroup" ] },
            {"required": [ "condition" ] }
          ]
        }
      ]
    },
    "conditionsContent": {
      "type": "object",
      "properties": {
        "constraint":         { "$ref": "#/definitions/constraint" },
        "permissions":        { "$ref": "#/definitions/permissions" },
        "conditionsTopGroup": { "$ref": "#/definitions/conditionsTopGroup" },
        "conditionsGroup":    { "$ref": "#/definitions/conditionsGroup" },
        "condition":          { "$ref": "#/definitions/condition" }
      },
      "additionalProperties": false,
      "anyOf": [
        {"required": [ "constraint", "permissions", "conditionsTopGroup" ] },
        {"required": [ "constraint", "permissions", "conditionsGroup" ] },
        {"required": [ "constraint", "permissions", "condition" ] },
        {"required": [ "constraint", "conditionsTopGroup" ] },
        {"required": [ "constraint", "conditionsGroup" ] },
        {"required": [ "constraint", "condition" ] },
        {"required": [ "constraint" ] }
      ]
    },
    "conditionsUpdate": {
      "type": "object",
      "properties": {
        "constraint":         { "$ref": "#/definitions/constraint" },
        "permissions":        { "$ref": "#/definitions/permissions" },
        "conditionsTopGroup": { "$ref": "#/definitions/conditionsTopGroup" },
        "conditionsGroup":    { "$ref": "#/definitions/conditionsGroup" },
        "condition":          { "$ref": "#/definitions/condition" }
      },
      "additionalProperties": false,
      "anyOf": [
        {"required": [ "constraint", "permissions", "conditionsTopGroup" ] },
        {"required": [ "constraint", "permissions", "conditionsGroup" ] },
        {"required": [ "constraint", "permissions", "condition" ] },
        {"required": [ "constraint", "conditionsTopGroup" ] },
        {"required": [ "constraint", "conditionsGroup" ] },
        {"required": [ "constraint", "condition" ] }
      ]
    },
    "permissions": {
      "type": "object",
      "properties": {
        "type": { "type": "string" , "enum": ["ALL", "ANY", "NONE"]},
        "values" : {
          "type": "array",
          "items": { "type": "string" }
        }
      },
      "required": [ "type", "values" ],
      "additionalProperties": false
    },
    "conditionsTopGroup": {
      "type": "object",
      "properties": {
        "operator": { "type": "string" , "enum": ["AND", "OR"] },
        "conditionsGroups" : {
          "type": "array",
          "items": { "$ref": "#/definitions/conditionsGroup" }
        }
      },
      "required": ["operator", "conditionsGroups"],
      "additionalProperties": false
    },
    "conditionsGroup": {
      "type": "object",
      "properties": {
        "operator": { "type": "string" , "enum": ["AND", "OR"]},
        "conditions" : {
          "type": "array",
          "items": { "$ref": "#/definitions/condition" }
        }
      },
      "required": ["operator", "conditions"],
      "additionalProperties": false
    },
    "condition": {
      "type": "object",
      "properties": {
        "property": { "$ref": "#/definitions/propertyNameWithAggregateFunctionPattern" },
        "constraint" : { "$ref": "#/definitions/constraint" }
      },
      "required": ["property", "constraint"],
      "additionalProperties": false
    },
    "constraint": {
      "type": "object",
      "oneOf": [
        { "$ref": "#/definitions/equalsStringConstraint" },
        { "$ref": "#/definitions/equalsDateConstraint" },
        { "$ref": "#/definitions/equalsNumberConstraint" },
        { "$ref": "#/definitions/equalsBooleanConstraint" },
        { "$ref": "#/definitions/equalsNullConstraint" },
        { "$ref": "#/definitions/equalsRefConstraint" },
        { "$ref": "#/definitions/sizeConstraint" },
        { "$ref": "#/definitions/rangeConstraint" },
        { "$ref": "#/definitions/regexConstraint" },
        { "$ref": "#/definitions/datesConstraint" }
      ]
    },
    "equalsStringConstraint": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string" ,
          "enum": ["EQUALS_ANY", "EQUALS_NONE"]
        },
        "values" : {
          "type": "array",
          "items": {
            "type" : "string",
            "not": {
              "anyOf" : [
                { "format": "date" },
                { "format": "date-time" }
              ]
            }
          }
        }
      },
      "required": ["type", "values"],
      "additionalProperties": false
    },
    "equalsDateConstraint": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string" ,
          "enum": ["EQUALS_ANY", "EQUALS_NONE"]
        },
        "values" : {
          "type": "array",
          "items": {
            "type": "string" ,
            "anyOf": [
              { "format": "date" },
              { "format": "date-time" }
            ]
          }
        }
      },
      "required": ["type", "values"],
      "additionalProperties": false
    },
    "equalsNumberConstraint": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string" ,
          "enum": ["EQUALS_ANY", "EQUALS_NONE"]
        },
        "values" : {
          "type": "array",
          "items": { "type" : "number" }
        }
      },
      "required": ["type", "values"],
      "additionalProperties": false
    },
    "equalsBooleanConstraint": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string" ,
          "enum": ["EQUALS_ANY", "EQUALS_NONE"]
        },
        "values" : {
          "type": "array",
          "items": { "type" : "boolean" }
        }
      },
      "required": ["type", "values"],
      "additionalProperties": false
    },
    "equalsNullConstraint": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string" ,
          "enum": ["EQUALS_NULL", "EQUALS_NOT_NULL"]
        }
      },
      "required": ["type"],
      "additionalProperties": false
    },
    "equalsRefConstraint": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string" ,
          "enum": ["EQUALS_ANY_REF", "EQUALS_NONE_REF"]
        },
        "values" : {
          "type": "array",
          "items": {
            "type" : "string",
            "$ref": "#/definitions/propertyNameWithAggregateFunctionPattern"
          }
        }
      },
      "required": ["type", "values"],
      "additionalProperties": false
    },
    "sizeConstraint": {
      "type": "object",
      "properties": {
        "type": { "type": "string" , "enum": ["SIZE"] },
        "min" : { "type": "number", "minimum": 0 },
        "max" : { "type": "number", "minimum": 0 }
      },
      "required": ["type"],
      "anyOf": [
        { "required": ["min"] },
        { "required": ["max"] }
      ],
      "additionalProperties": false
    },
    "rangeConstraint": {
      "type": "object",
      "properties": {
        "type": { "type": "string" , "enum": ["RANGE"] },
        "min" : { "type": "number" },
        "max" : { "type": "number" }
      },
      "required": ["type"],
      "anyOf": [
        { "required": ["min"] },
        { "required": ["max"] }
      ],
      "additionalProperties": false
    },
    "regexConstraint": {
      "type": "object",
      "properties": {
        "type": { "type": "string" , "enum": ["REGEX_ANY"] },
        "values" : {
          "type": "array",
          "items": { "type" : "string", "format": "regex" }
        }
      },
      "required": ["type", "values"],
      "additionalProperties": false
    },
    "datesConstraint": {
      "type": "object",
      "properties": {
        "type": { "type": "string" , "enum": ["DATE_FUTURE", "DATE_PAST"] },
        "days" : { "type": "number" }
      },
      "required": ["type", "days"],
      "additionalProperties": false
    }
  }
}
